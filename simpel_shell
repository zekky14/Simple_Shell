#include "shell.h"
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <sys/wait.h>

#define MAX_COMMAND_LENGTH 100

/**
 * main - UNIX command line interpreter.
 *
 * @argc: The number of arguments passed to the program.
 * @argv: An array of strings containing the arguments passed to the program.
 * @envp: An array of strings containing the environment variables.
 *
 * Return: Always 0.
 */
int main(int argc, char **argv, char **envp)
{
char command[MAX_COMMAND_LENGTH];
char *args[2];
int status;

while (1) {
write(STDOUT_FILENO, "simple_shell$ ", 14);

if (fgets(command, MAX_COMMAND_LENGTH, stdin) == NULL) {
write(STDOUT_FILENO, "\n", 1);
break;
}

// Remove trailing newline character
command[strcspn(command, "\n")] = '\0';

// Parse command line
args[0] = command;
args[1] = NULL;

// Execute command
if (fork() == 0) {
execve(args[0], args, envp);
write(STDOUT_FILENO, "Command not found: ", 19);
write(STDOUT_FILENO, args[0], strlen(args[0]));
write(STDOUT_FILENO, "\n", 1);
exit(1);
} else {
wait(&status);
}
}

return 0;
}
